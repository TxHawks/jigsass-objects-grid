// *************************************
//
// # jigsass-objects-grid Config
// -> Configuration variables
//
////
/// @group Grid - 00 - Config
////
//
// *************************************

@charset 'UTF-8';


// -------------------------------------
// Variables
// -------------------------------------

// stylelint-disable
/* ---
section: Grid
title: Configuration
order: 1
---
JigSass Grid can be tweaked using the following built-in configuration variables.
To override the default values, set your own _before_ importing JigSass Grid.


#### Grid container class name
```scss
$jigsass-grid-class
```
**Type:** `String`

The class-name (sans the leading `.`) used for grid containers.

**Default:** `o-string`


#### Grid item class name
```scss
$jigsass-grid-item-class
```
**Type:** `String`

The class-name (sans the leading `.`) used for grid items

**Default:** $jigsass-grid-class + `__item`


#### Flexbox
```scss
$jigsass-grid-flexbox
```
**Type:** `Boolean`

Determines if the grid system be based on flexbox.

**Default:** `true`


#### Flexbox fallback
```scss
$jigsass-grid-flexbox-fallback
```
**Type:** `Boolean` or `String`<br />
Determines if to include a flexbox fallback and the qualifier class
to use if so (e.g, `.no-flexwrap` when using Modernizr defaults)

Set to `false` to disable fallback altogether, and to a class-name
(sans the leading `.`) used as the qualifier class if fallback is
desirable.

**Default:** `no-flexwrap`


#### Default gutter width
```scss
$jigsass-grid-default-gutter
```

**Type:** `Number`

A unitless number. The default number of base rhythm units
(as defined in [$jigsass-sizes.rhythm-unit](https://txhawks.github.io/jigsass-tools-typography/#variable-_jigsass-default-sizes)) to use as the default gutter between grid items.

**Default:** `4`


#### Gutter width Modifiers
```scss
$jigsass-grid-gutter-modifiers
```

**Type:** `Map`

Specifies gutter-width modifiers that will be available.

A map where each key is a modifier's name and its value is a
unitless number, denoting the number of rhythm units to serve
as gutter-width for each modifier.

**Default:** `(gutter-0: 0, gutter-1: 1, gutter-2: 2, gutter-8: 8)`


#### Grid columns
```scss
$jigsass-grid-cols
```

**Type:** `List`

A list of unitless numbers, specifying a number of columns a grid item can be split into.
Setting `$jigsass-grid-cols` to `7 12`would mean that grid items could be `x-of-7` or
`x-of-12` in width.

**Default:** `12`


#### Gutter rules

Specifies names and styles of gutter rule modifiers

A map where each key is a modifier's name, and its value is
the border style to apply to that modifier's column rule.

**Type:** `Map`

**Default:** `(gutter-rule-1: 1px solid #ccc)`
*/
// stylelint-enable


/// The class-name (sans the leading `.`) used for grid containers
/// ---
/// @type String
/// ---
$jigsass-grid-class: o-grid !default;

/// The class-name (sans the leading `.`) used for grid items
/// ---
/// @type String
/// ---
$jigsass-grid-item-class: #{$jigsass-grid-class}__item !default;

/// Determines if the grid system be based on flexbox.
/// ---
/// @type Boolean
/// ---
$jigsass-grid-flexbox: true !default;

/// Determines if to include a flexbox fallback and the qualifier class
/// to use if so (e.g, `.no-flexwrap` when using Modernizr defaults)
///
/// Set to `false` to disable fallback altogether, and to a class-name
/// (sans the leading `.`) used as the qualifier class if fallback is
/// desirable.
/// ---
/// @type String | Boolean
/// ---
$jigsass-grid-flexbox-fallback: 'no-flexwrap' !default;

/// The default number of base rhythm units
/// (as defined in `$jigsass-sizes.rhythm-unit`).
///
/// Must be a unitless number.
/// ---
/// @type Number
/// ---
$jigsass-grid-default-gutter: 4 !default;

/// Specifies the gutter-width modifiers that will be available
///
/// A map where each key is a modifier's name and its value is a
/// unitless number, denoting the number of rhythm units to serve
/// as gutter-width for each modifier.
/// ---
/// @type Map
/// ---
$jigsass-grid-gutter-modifiers: (
 gutter-0: 0,
 gutter-1: 1,
 gutter-2: 2,
 gutter-8: 8,
) !default;

/// A list of column configurations to generate
///
/// Will generate x-of-number column objects for
/// each number in the list.
/// ---
/// @type Number|List
/// ---
$jigsass-grid-cols: 12 !default;

/// Specifies names and styles of gutter rule modifiers
///
/// A map where each key is a modifier's name, and its value is
/// the border style to apply to that modifier's column rule.
/// ---
/// @type Map
/// ---
$jigsass-grid-gutter-rules: (gutter-rule-1: 1px solid #ccc) !default;


// stylelint-disable
/* ---
section: Grid
title: CSS Outpout
order: -2
---
By default, JigSass Grid does not generate any CSS output when imported into
a stylesheet. CSS output must be enabled on a per-selector basis, inside the
dedicated configuration maps:

#### Grid container and grid container modifier classes
```scss
$jigsass-grid-config
```

**Type:** `Map`

Configuration map for enabling generation of grid container and
grid container modifier classes.


**Default:**
```scss
$jigsass-grid-conf: (
  no-breakpoint: (
    no-modifier: false,

    // Horizontal alignment modifiers
    start: false,
    center: false,
    end: false,
    rev: false,

    // Vertical alignment modifiers
    equal-height: false,
    top: false,
    middle: false,
    bottom: false,

    // Horizontal distribution modifiers
    space-between: false,
    space-around: false,

    // gutter-width modifiers
    // Enable gutter modifiers defined in
    // `$jigsass-grid-gutter-modifiers` here.
  ),
);
```


**Example:**
```scss
$jigsass-grid-conf: (
  no-breakpoint: (
    no-modifier: true,  // Enables generation of the `.#{$jigsass-grid-class}`
                        // class outside of any media query.
    end: true,          // Enables generation of the `.#{$jigsass-grid-class}--end`
                        // modifier class outside of any media query.
  ),
  from-<bp-name>: (
    no-modifier: true,  // Enables generation of the `.#{$jigsass-grid-class}--from-<bp-name>`
                        // class inside a min-width media query
                        // defined ins `$jigsass-breakpoints.length`.
    end: true,          // Enables generation of the `.#{$jigsass-grid-class}--end--from-<bp-name>`
                        // class inside a min-width media query
                        // defined ins `$jigsass-breakpoints.length`.
  ),
  until-<bp-name>: (
    no-modifier: true,  // Enables generation of the `.#{$jigsass-grid-class}--until-<bp-name>`
                        // class inside a max-width media query
                        // defined ins `$jigsass-breakpoints.length`.
   end: true,           // Enables generation of the `.#{$jigsass-grid-class}--end--until-<bp-name>`
                        // class inside a max-width media query
                        // defined ins `$jigsass-breakpoints.length`.
  ),
  when-<bp-name>: (
    no-modifier: true,  // Enables generation of the `.#{$jigsass-grid-class}--when-<bp-name>`
                        // class inside a misc media query
                        // defined ins `$jigsass-breakpoints.features`.
    end: true,          // Enables generation of the `.#{$jigsass-grid-class}--end--when-<bp-name>`
                        // class inside a misc media query
                        // defined ins `$jigsass-breakpoints.features`.
  ),
  from-<bp-name>-until-<bp-name>: (...);
  from-<bp-name>-when-<bp-name>: (...);
  until-<bp-name>-when-<bp-name>: (...);
  from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);
);
```


#### Grid item and grid item modifier classes
```scss
$jigsass-grid-item-config
```

**Type:** `Map`

Configuration map for enabling generation of
grid item and grid item modifier classes


**Default:**
```scss
$jigsass-grid-item-conf: (
  no-breakpoint: (
    no-modifier: false,
    col: false,
    fixed: false,
    center: false,

    // Enable item specific gutter width modifiers
    // defined in `$jigsass-grid-gutter-modifiers`
    // here.

    // Enable item width modifiers
    // based on ratios defined in
    // `$jigsass-grid-cols`here.

    // Enable item offset modifiers
    // based on ratios defined in
    // `$jigsass-grid-cols`here.

    // Enable gutter rule modifiers defined
    // in `$jigsass-grid-gutter-rules` here
  ),
);
```


**Example:**
```scss
$jigsass-grid-item-conf: (
  no-breakpoint: (
    no-modifier: true,  // Enables generation of the `.#{$jigsass-grid-item-class}`
                        // class outside of any media query.
    col: true,          // Enables generation of the `.#{$jigsass-grid-item-class}--col`
                        // modifier class outside of any media query.
  ),
  from-<bp-name>: (
    no-modifier: true,  // Enables generation of the `.#{$jigsass-grid-item-class}--from-<bp-name>`
                        // class inside a min-width media query
                        // defined ins `$jigsass-breakpoints.length`.
    col: true,          // Enables generation of the `.#{$jigsass-grid-item-class}--col--from-<bp-name>`
                        // class inside a min-width media query
                        // defined ins `$jigsass-breakpoints.length`.
  ),
  until-<bp-name>: (
    no-modifier: true,  // Enables generation of the `.#{$jigsass-grid-item-class}--until-<bp-name>`
                        // class inside a max-width media query
                        // defined ins `$jigsass-breakpoints.length`.
    col: true,          // Enables generation of the `.#{$jigsass-grid-item-class}--col--until-<bp-name>`
                        // class inside a max-width media query
                        // defined ins `$jigsass-breakpoints.length`.
  ),
  when-<bp-name>: (
    no-modifier: true,  // Enables generation of the `.#{$jigsass-grid-item-class}--when-<bp-name>`
                        // class inside a misc media query
                        // defined ins `$jigsass-breakpoints.features`.
    col: true,          // Enables generation of the `.#{$jigsass-grid-item-class}--col--when-<bp-name>`
                        // class inside a misc media query
                        // defined ins `$jigsass-breakpoints.features`.
  ),
  from-<bp-name>-until-<bp-name>: (...);
  from-<bp-name>-when-<bp-name>: (...);
  until-<bp-name>-when-<bp-name>: (...);
  from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);
);
```
*/
/// Configuration map for enabling generation of
/// grid container and grid container modifier
/// classes.
/// ---
/// @example
///		$jigsass-grid-conf: (
///    no-breakpoint: (
///      no-modifier: true,  // Enables generation of the `.o-grid`
///                          // class outside of any media query.
///      end: true,          // Enables generation of the `.o-grid--end`
///                          // modifier class outside of any media query.
///    ),
///    from-<bp-name>: (
///      no-modifier: true,  // Enables generation of the `.o-grid--from-<bp-name>`
///                          // class inside a min-width media query
///                          // defined ins `$jigsass-breakpoints.length`.
///      end: true,          // Enables generation of the `.o-grid--end--from-<bp-name>`
///                          // class inside a min-width media query
///                          // defined ins `$jigsass-breakpoints.length`.
///    ),
///    until-<bp-name>: (
///      no-modifier: true,  // Enables generation of the `.o-grid--until-<bp-name>`
///                          // class inside a max-width media query
///                          // defined ins `$jigsass-breakpoints.length`.
///     end: true,           // Enables generation of the `.o-grid--end--until-<bp-name>`
///                          // class inside a max-width media query
///                          // defined ins `$jigsass-breakpoints.length`.
///    ),
///    when-<bp-name>: (
///      no-modifier: true,  // Enables generation of the `.o-grid--when-<bp-name>`
///                          // class inside a misc media query
///                          // defined ins `$jigsass-breakpoints.features`.
///      end: true,          // Enables generation of the `.o-grid--end--when-<bp-name>`
///                          // class inside a misc media query
///                          // defined ins `$jigsass-breakpoints.features`.
///    ),
///    from-<bp-name>-until-<bp-name>: (...);
///    from-<bp-name>-when-<bp-name>: (...);
///    until-<bp-name>-when-<bp-name>: (...);
///    from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);
///  );
/// ---
/// @type {Map}
/// ---
$jigsass-grid-conf: (
  no-breakpoint: (
    no-modifier: false,

    // Horizontal alignment modifiers
    start: false,
    center: false,
    end: false,
    rev: false,

    // Vertical alignment modifiers
    equal-height: false,
    top: false,
    middle: false,
    bottom: false,

    // Horizontal distribution modifiers
    space-between: false,
    space-around: false,

    // gutter-width modifiers
    // Enable gutter modifiers defined in
    // `$jigsass-grid-gutter-modifiers` here.
  ),
) !default;


/// Configuration map for enabling generation of
/// grid item and grid item modifier classes
/// ---
/// @example
///		$jigsass-grid-item-conf: (
///    no-breakpoint: (
///      no-modifier: true,  // Enables generation of the `.o-grid__item`
///                          // class outside of any media query.
///      col: true,          // Enables generation of the `.o-grid__item--col`
///                          // modifier class outside of any media query.
///    ),
///    from-<bp-name>: (
///      no-modifier: true,  // Enables generation of the `.o-grid__item--from-<bp-name>`
///                          // class inside a min-width media query
///                          // defined ins `$jigsass-breakpoints.length`.
///      col: true,          // Enables generation of the `.o-grid__item--col--from-<bp-name>`
///                          // class inside a min-width media query
///                          // defined ins `$jigsass-breakpoints.length`.
///    ),
///    until-<bp-name>: (
///      no-modifier: true,  // Enables generation of the `.o-grid__item--until-<bp-name>`
///                          // class inside a max-width media query
///                          // defined ins `$jigsass-breakpoints.length`.
///      col: true,          // Enables generation of the `.o-grid__item--col--until-<bp-name>`
///                          // class inside a max-width media query
///                          // defined ins `$jigsass-breakpoints.length`.
///    ),
///    when-<bp-name>: (
///      no-modifier: true,  // Enables generation of the `.o-grid__item--when-<bp-name>`
///                          // class inside a misc media query
///                          // defined ins `$jigsass-breakpoints.features`.
///      col: true,          // Enables generation of the `.o-grid__item--col--when-<bp-name>`
///                          // class inside a misc media query
///                          // defined ins `$jigsass-breakpoints.features`.
///    ),
///    from-<bp-name>-until-<bp-name>: (...);
///    from-<bp-name>-when-<bp-name>: (...);
///    until-<bp-name>-when-<bp-name>: (...);
///    from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);
///  );
/// ---
/// @type {Map}
/// ---
$jigsass-grid-item-conf: (
  no-breakpoint: (
    no-modifier: false,
    col: false,
    fixed: false,
    center: false,

    // Enable item specific gutter width modifiers
    // defined in `$jigsass-grid-gutter-modifiers`
    // here.

    // Enable item width modifiers
    // based on ratios defined in
    // `$jigsass-grid-cols`here.

    // Enable item offset modifiers
    // based on ratios defined in
    // `$jigsass-grid-cols`here.

    // Enable gutter rule modifiers defined
    // in `$jigsass-grid-gutter-rules` here
  ),
) !default;
